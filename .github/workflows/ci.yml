# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'     
        required: true
        default: '1.0.0'
      qa:
        description: 'Require QA'     
        required: false
        default: true
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Build the code
        run: echo "Build"
      - name: Output multiline
        id: output
        run: |
          bar="
            line 1
            line 2
          "
          echo "foo="$bar"" >> $GITHUB_OUTPUT
      - name: print output
        run:
          echo "${{github.steps.output.outputs.foo}}"
  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Test
        run: echo "Test"
  release-staging:
    needs: [test]
    if: ${{github.event.inputs.qa}}
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://github.com/alvaromartmart/gh-actions-playground
    steps:
      - name: Prepare release (staging)
        run: |
          echo "Preparing release"
          sleep 5s
        shell: bash
      - name: Release (staging)
        run: |
          echo "Deploying to staging"
          sleep 15s
        shell: bash
  release-prod:
    name: 'Release ${{github.event.inputs.version}}'
    needs: [release-staging]
    if: ${{always()}}
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://github.com/alvaromartmart/gh-actions-playground
    steps:
      - name: Release (production)
        run: echo "Release to prod!"
  print-message:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: print
        id: read
        run: |
          msg="$(cat message.md)"
          echo "result="$msg"" >> $GITHUB_OUTPUT
      - name: print
        run: |
          echo "${{steps.read.outputs.result}}""
        with:
          SLACK_TOKEN: ${{secrets.SLACK_TOKEN}}
      - name: Send message to slack
        uses: archive/github-actions-slack@v2.3.1
        id: send-message
        continue-on-error: true
        with:
          slack-bot-user-oauth-access-token: ${{secrets.SLACK_TOKEN}}
          slack-channel: ${{secrets.SLACK_CHANNEL}}
          slack-text: 'Test results'
          slack-optional-blocks: |
            [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Message for `${{ github.ref_name }}` - <https://github.com/${{github.repository}}/commit/${{github.sha}}|_'${{ steps.commit-msg.outputs.commitmsg }}'_> (view <https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}|_run_>)"
                },
              },
              {"type": "section", "text": {"type": "mrkdwn", "text": "${{steps.read.outputs.result}}"}}
            ]


    
